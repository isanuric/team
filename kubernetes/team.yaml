apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: team-ingress
  namespace: default
spec:
  rules:
  - http:
      paths:
        - path: /welcome
          pathType: Prefix
          backend:
            service:
              name: team-service
              port:
                number: 8080
        - path: /info
          pathType: Prefix
          backend:
            service:
              name: team-service
              port:
                number: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: team
  name: team-service
  namespace: default
  selfLink: /api/v1/namespaces/default/services/team
spec:
  type: NodePort
  ports:
    - nodePort: 30009
      port: 8080
      targetPort: 8080
  selector:
    app: team
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: team
  name: team
  namespace: default
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/team
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: team
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: team
    spec:
      containers:
        - image: team:latest
          imagePullPolicy: Never
          name: team
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: passwords
              mountPath: application.passwords
              readOnly: true
            - name: configurations
              mountPath: application.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: passwords
          secret:
            secretName: team-secret
        - name: configurations
          configMap:
            name: team-configmap

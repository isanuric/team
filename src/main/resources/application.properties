logging.pattern.console=%-5level %logger{36} - %msg%n

## docker
# docker run --name my-postgres -p 5432:5432 -e POSTGRES_PASSWORD=pass -d postgres:latest
# docker exec -it my-postgres psql -U postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=pass
#spring.datasource.initialization-mode=always
#spring.datasource.schema=classpath:schema.sql
#spring.datasource.data=classpath:person.csv
#spring.jpa.generate-ddl=true
#spring.jpa.postgres.ddl-auto = create

# Hibernate
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=sa


# maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout=20000
# minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle=10
# maximum pool size
spring.datasource.hikari.maximum-pool-size=10


spring.user.name=
security.user.password=${SECRETS_DEMO_USER_PASSWD:demo}


bean.message=